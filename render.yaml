services:
  - type: web
    name: dentists-assistant-frontend
    env: node
    buildCommand: |
      cd frontend
      echo "=== Environment Information ==="
      echo "Node version: $(node -v)"
      echo "NPM version: $(npm -v)"
      echo "Current directory: $(pwd)"
      
      echo "=== Starting build process ==="
      npm install
      npm run build
      
      echo "=== Debug: Build Output Structure ==="
      echo "Checking .next directory..."
      ls -la .next/
      
      echo "=== Preparing Standalone Build ==="
      # First, ensure clean state
      rm -rf .next/standalone
      rm -rf .next/static
      
      # Create all required directories
      mkdir -p .next/standalone/.next/static
      mkdir -p .next/standalone/.next/server
      mkdir -p .next/standalone/public
      
      echo "=== Copying Build Files ==="
      # 1. Copy the standalone server first
      cp -r .next/standalone/* .next/standalone/
      
      # 2. Copy all static files and chunks
      echo "Copying static files and chunks..."
      cp -r .next/static/* .next/standalone/.next/static/
      
      # 3. Copy server files
      echo "Copying server files..."
      cp -r .next/server/* .next/standalone/.next/server/
      
      # 4. Copy all required manifests
      echo "Copying manifest files..."
      cp .next/build-manifest.json .next/standalone/.next/
      cp .next/prerender-manifest.json .next/standalone/.next/
      cp .next/routes-manifest.json .next/standalone/.next/
      cp .next/required-server-files.json .next/standalone/.next/
      cp .next/server/pages-manifest.json .next/standalone/.next/server/
      cp .next/app-build-manifest.json .next/standalone/.next/ || true
      
      # 5. Copy public files
      echo "Copying public files..."
      cp -r public/* .next/standalone/public/
      
      # 6. Ensure package.json is present
      cp package.json .next/standalone/
      
      echo "=== Verifying Critical Files ==="
      echo "1. Checking static files..."
      ls -la .next/standalone/.next/static/
      
      echo "2. Checking chunks..."
      ls -la .next/standalone/.next/static/chunks/ || echo "No chunks directory!"
      
      echo "3. Checking manifest files..."
      ls -la .next/standalone/.next/*.json
      
      echo "4. Checking server files..."
      ls -la .next/standalone/.next/server/
      
      echo "=== Final Structure ==="
      echo "Complete standalone directory tree:"
      find .next/standalone -type f | grep -v "node_modules"
      
      echo "=== Verifying File Permissions ==="
      chmod -R 755 .next/standalone/.next/static
      chmod -R 755 .next/standalone/public
      
      echo "=== Build process completed ==="
    startCommand: |
      cd frontend/.next/standalone
      echo "=== Server Startup Debug ==="
      echo "1. Current directory: $(pwd)"
      echo "2. Static files:"
      ls -la .next/static/
      echo "3. Manifest files:"
      ls -la .next/*.json
      echo "4. Server files:"
      ls -la .next/server/
      echo "=== Starting server ==="
      NODE_ENV=production HOSTNAME=0.0.0.0 PORT=10000 node server.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: NEXT_PUBLIC_API_URL
        value: https://dentists-assistant-ai-backend.onrender.com
      - key: FRONTEND_URL
        value: https://dentists-assistant-ai-frontend.onrender.com
    autoDeploy: true

  - type: web
    name: dentists-assistant-backend
    env: node
    buildCommand: cd backend && npm install
    startCommand: cd backend && node index.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: FRONTEND_URL
        value: https://dentists-assistant-ai-frontend.onrender.com
      - key: MONGODB_URI
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: OPENAI_API_KEY
        sync: false
    autoDeploy: true
